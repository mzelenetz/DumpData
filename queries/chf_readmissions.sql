WITH visits AS (
    SELECT
        -- ALL VISITS
          ind.PATIENTID
        , ind.MRN
        , ind.INPATIENTID
        , ind.NATIVEINPATIENTID
        , ind.NATIVEACCTNUMID
        , ind.ADMITTED
        , ind.DISCHARGED
        , ind.DISPOSITIONID
        , l.DISPOSITIONDESC
        , CASE WHEN r.INPATIENTID IS NOT NULL THEN 1 ELSE 0 END AS HAS_READMISSION_YN
        , r.INPATIENTID AS READMISSION_VISIT
        , r.ADMITTED AS READMISSION_ADMITTED
        , r.ADMITTED - ind.DISCHARGED AS DAYS_BETWEEN_VISITS
        , fac.FACILITYDESC AS IndexFacility
        , pat.DOB
        , ind.ADMITTED - pat.DOB AS AGE_AT_ADMIT_DAYS
        , trunc(months_between(ind.ADMITTED, pat.DOB)/12) AGE_AT_ADMIT_YEARS
        , pat.SEX
        , rac.RACEDESC
        , pat.ZIPCODE
        , ind.READMISSIONMODEL
        , ind.READMISSIONSCORE
        , drg.DRG AS MSDRG
        , drg.MCWEIGHT AS MSDRG_Weight
        , drg.MCLOS AS MSDRG_GMLOS
        , ROW_NUMBER() OVER(PARTITION BY ind.INPATIENTID ORDER BY r.ADMITTED) AS READMISSION_RANK
    FROM EDM.INPATIENTS@EDWPROD ind
    INNER JOIN EDM.LOOKUPFACILITY@EDWPROD fac ON fac.FACILITYID = ind.FACILITYID
    LEFT JOIN EDM.PATIENTS@EDWPROD pat ON pat.PATIENTID = ind.PATIENTID
    LEFT JOIN EDM.LOOKUPRACE@EDWPROD rac ON rac.RACEID = pat.RACEID
    LEFT JOIN (
        -- READMISSION
        SELECT
              prev.PATIENTID
            , prev.INPATIENTID
            , prev.ADMITTED
            , prev.DISCHARGED
        FROM EDM.INPATIENTS@EDWPROD prev
        WHERE ADMITPRIORITYID IN (1, 5) --Admit Priority IS urgent OR priority
    ) r ON r.PATIENTID = ind.PATIENTID AND r.ADMITTED - ind.DISCHARGED BETWEEN 0 AND 30 AND r.INPATIENTID <> ind.INPATIENTID
    LEFT JOIN EDM.LOOKUPDISPOSITION@EDWPROD l ON l.DISPOSITIONID = ind.DISPOSITIONID
    LEFT JOIN EDM.LOOKUPDRG@EDWPROD fdrg ON fdrg.DRGID = ind.DRGID
    LEFT JOIN EDM.LOOKUPMEDICAREDRGS@EDWPROD drg ON drg.DRG = CAST(fdrg.NATIVEDRGID AS INT)
        AND ind.DISCHARGED BETWEEN drg.MCSTARTDATE AND drg.MCENDDATE
    WHERE 1=1
        AND ind.ADMITPRIORITYID IN (1, 5) --Admit Priority IS urgent OR priority
        AND REGEXP_LIKE(fac.FACILITYDESC, '(white plains)|(wph)', 'i')
        AND ind.DISPOSITIONID NOT IN (5, 3, 10, 12, 16, 30, 31, 32, 34, 35, 36, 38, 37, 42, 70, 71, 76, 65, 80, 51, 11, 19, 45, 4, 47, 81)
),

cardios AS (
    SELECT
        DISTINCT PROVIDERSPECIALTYID
    FROM EDM.LOOKUPPROVIDERSPECIALTY@EDWPROD
    WHERE REGEXP_LIKE(PROVIDERSPECIALTYDESC, 'cardi', 'i')
),

appts AS (
	SELECT
	      a.*
	    , pp.PCPYN
	    , pm.PROVIDER_PRIMARYSPECIALTYDESC
	    , pm.PROVIDER_SECONDARYSPECIALTYDESC
	    , me.SCHEDULE_INLIER
	    , me.APPOINTMENTS_TOTAL_SUM
	    , me.APPOINTMENTS_COMP_SUM
	    , me.APPOINTMENTS_CANC_SUM
	    , me.APPOINTMENTS_OTHER_SUM
	    , me.SAME_DAY_SUM
	    , me.NEXT_DAY_SUM
	    , me.SAME_DAY_NEXT_DAY_SUM
	    , me.FUTURE_SUM
	    , me.SAME_DAY_NEXT_DAY_SUM / me.APPOINTMENTS_TOTAL_SUM AS SAME_DAY_NEXT_DAY_PROP
	FROM JSEGE.APPOINTMENTS_ALL_SA a
	LEFT JOIN JSEGE.PROVIDER_META pm ON pm.PROVIDERID = a.PROVIDERID
	LEFT JOIN JSEGE.PROVIDER_METRICS me
	    ON me.PROVIDERID = a.PROVIDERID
	    AND me.DATEKEY = a.APPT_DATE_KEY
	    AND me.FACILITYID = a.FACILITYID
	    AND me.DEPTID = a.DEPTID
	LEFT JOIN JSEGE.PATIENT_PROVIDER pp
		ON pp.PATIENTID = a.PATIENTID
		AND pp.PROVIDERID = a.PROVIDERID
	WHERE 1=1
--	    AND TO_DATE(APPT_DATE) >= TO_DATE('2021-05-01', 'YYYY-MM-DD')
	    AND (
	        pm.PRIMARYSPECIALTYID IN (SELECT DISTINCT PROVIDERSPECIALTYID FROM cardios)
	        OR pm.SECONDSPECIALTYID IN (SELECT DISTINCT PROVIDERSPECIALTYID FROM cardios)
	        OR pp.PCPYN = 1
	    )
--	    AND APPTSTATUSID <> 6
),

visits_appts AS (
	SELECT
		  visits.*
		, appts.APPT_DATE
		, appts.APPT_DATE_KEY
		, appts.DOW_NAME
		, appts.DOW_INT
		, appts.FACILITYID
		, appts.FACILITYDESC
		, appts.DEPTID
		, appts.DEPTDESC
		, appts.TYPE
		, appts.APPTSTATUSID
		, appts.APPT_STATUS
		, appts.PROVIDERID
		, appts.PROVIDERDESC
		, appts.DAYS_TO_APPT
		, appts.SAME_DAY_YN
		, appts.NEXT_DAY_YN
		, appts.SAME_DAY_CANC_YN
		, appts.APPT_MADE_DATE
		, appts.APPT_MADE_DATE_KEY
	    , appts.PROVIDER_PRIMARYSPECIALTYDESC
	    , appts.PROVIDER_SECONDARYSPECIALTYDESC
	    , appts.SCHEDULE_INLIER
	    , appts.APPOINTMENTS_TOTAL_SUM AS APPOINTMENTS_TOTAL
	    , appts.APPOINTMENTS_COMP_SUM AS APPOINTMENTS_COMP
	    , appts.APPOINTMENTS_CANC_SUM AS APPOINTMENTS_CANC
	    , appts.APPOINTMENTS_OTHER_SUM AS APPOINTMENTS_OTHER
	    , appts.SAME_DAY_SUM AS SAME_DAY
	    , appts.NEXT_DAY_SUM AS NEXT_DAY
	    , appts.SAME_DAY_NEXT_DAY_SUM AS SAME_DAY_NEXT_DAY
	    , appts.FUTURE_SUM AS FUTURE
	    , appts.SAME_DAY_NEXT_DAY_PROP
	    , appts.APPT_DATE - visits.DISCHARGED AS DAYS_FROM_DISCHARGE_TO_APPT
	    , ROW_NUMBER() OVER(PARTITION BY visits.INPATIENTID ORDER BY APPT_DATE) AS APPT_RANK
	FROM visits
	LEFT JOIN appts
		ON appts.PATIENTID = visits.PATIENTID
		AND appts.APPT_DATE >= visits.DISCHARGED
),

chf_reg AS (
	SELECT
		*
	FROM DM_CHF@CLRPROD hi
	INNER JOIN (
		select
		PAT_ID
		,IDENTITY_ID as MRN
		, IDENTITY_TYPE_ID
		, dense_rank() over (partition by PAT_ID order by LINE asc) AS rn
		from IDENTITY_ID@CLRPROD
		where IDENTITY_TYPE_ID = 14
		) mrn
		on mrn.PAT_ID = hi.PAT_ID
		and mrn.RN = 1
	WHERE hi.REGISTRY_STATUS_C = 1
),

findings AS (
	SELECT
		    p.PATIENTID
		  , p.MRN
		  , NATIVEENCOUNTERID AS ASSESSMENT_CSN
		  , f.FINDINGDATETIME
		  , fl.FINDINGDESC
	  	  , f.NATIVEFINDING AS FOLLOW_UP_RESPONSE
	  	  , i.INPATIENTID
	  	  , ROW_NUMBER() OVER(PARTITION BY i.INPATIENTID ORDER BY FINDINGDATETIME DESC) AS FINDING_RANK
	  FROM EDM.FINDINGS_ALL@EDWPROD f
	  LEFT JOIN EDM.LOOKUPFINDING@EDWPROD fl ON fl.FINDINGTYPEID = f.FINDINGTYPEID
	  LEFT JOIN EDM.PATIENTS@EDWPROD p ON p.PATIENTID = f.PATIENTID
  		LEFT JOIN EDM.INPATIENTS@EDWPROD i ON i.NATIVEINPATIENTID = f.NATIVEENCOUNTERID
	  WHERE f.FINDINGTYPEID = 400000520
)

SELECT
      visits_appts.*
    , findings.FINDINGDESC
    , findings.FOLLOW_UP_RESPONSE
    , CASE WHEN APPT_DATE IS NOT NULL THEN 1 ELSE 0 END AS HAS_CARDIO_PCP_FOLLOWUP_YN
    , CASE WHEN chf_reg.MRN IS NOT NULL THEN 1 ELSE 0 END AS ON_CHF_REG_YN
FROM visits_appts
LEFT JOIN findings
	ON findings.INPATIENTID = visits_appts.INPATIENTID
	AND FINDING_RANK = 1
LEFT JOIN chf_reg
	ON chf_reg.MRN = visits_appts.MRN
WHERE 1=1
    AND READMISSION_RANK = 1
    AND APPT_RANK = 1
    AND DISCHARGED IS NOT NULL
    AND TO_DATE(SYSDATE) - TO_DATE(DISCHARGED) > 30
