WITH all_admissions AS (
  -- NEXT ADMISSION
  SELECT
      prev.PATIENTID
    , prev.ADMITTED
  FROM EDM.INPATIENTS prev
  LEFT JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = prev.FACILITYID
  WHERE 1=1
      AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')

  UNION ALL

  SELECT
      ind.PATIENTID
    , ind.ARRIVALDATETIME AS ADMITTED
  FROM EDM.ERVISITS@EDWPROD ind
      LEFT JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = ind.FACILITYID
  WHERE 1=1
      AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')
),

discharges AS (
  -- INPATIENTS
  SELECT
      DISTINCT
        ind.PATIENTID
  		, ind.MRN
  		, ind.INPATIENTID AS VISITID
  		, ind.ADMITTED AS ADMITTEDARRIVAL
  		, ind.DISCHARGED
  		, ind.DISPOSITIONID
  		, l.DISPOSITIONDESC
  		, fac.FACILITYDESC
  		, serv.SERVICEDESC
  		, ns.DEPTDESC
  		, prov.LASTNAME
      , 'Inpatient' AS SOURCE
      , ROW_NUMBER() OVER(PARTITION BY INPATIENTID ORDER BY r.ADMITTED) AS READMISSION_RANK
      , TO_DATE(r.ADMITTED) - TO_DATE(ind.DISCHARGED) AS DAYS_TO_NEXT_VISIT
  FROM EDM.INPATIENTS@EDWPROD ind
      LEFT JOIN EDM.LOOKUPDISPOSITION l ON l.DISPOSITIONID = ind.DISPOSITIONID
      INNER JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = ind.FACILITYID
      LEFT JOIN EDM.LOOKUPSERVICE serv ON ind.SERVICEID = serv.SERVICEID
      LEFT JOIN EDM.LOOKUPPROVIDER prov ON ind.DISCHATTENDID = prov.PROVIDERID
      LEFT JOIN EDM.LOOKUPNURSINGSTATION ns ON ns.NURSINGSTATIONID = ind.DISCHNSID
      LEFT JOIN all_admissions r ON r.PATIENTID = ind.PATIENTID AND r.ADMITTED > ind.DISCHARGED
  WHERE 1=1
      -- AND fac.FACILITYDESC = 'White Plains Hospital'
      AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')
      -- AND SERVICEDESC NOT IN ('Obstetrics', 'Gynecology', 'Newborn')
      -- AND SERVICEDESC NOT IN ('Newborn')
      -- AND IND.DISPOSITIONID  IN (2, 7, 8)
      AND IND.DISPOSITIONID NOT IN (5, 6, 3, 10, 12, 16, 22, 30, 31, 32, 34, 35, 36, 38, 37, 42, 70, 71, 76, 65, 80, 51, 11, 19, 45, 4, 47, 54)
  		--AND TO_DATE(ind.DISCHARGED) >= TO_DATE(current_date - 14)

   UNION ALL

   -- ED
   SELECT
      DISTINCT
      	ind.PATIENTID
  		, ind.MRN
  		, ind.ERVISITID AS VISITID
  		, ind.ARRIVALDATETIME AS ADMITTEDARRIVAL
  		, ind.DISCHARGED
  		, ind.HSPENCDISPOSITIONID
  		, l.DISPOSITIONDESC
  		, fac.FACILITYDESC
  		, NULL AS SERVICEDESC
  		, 'WPH ED' AS DEPTDESC
  		, NULL AS LASTNAME
      , 'ED' AS SOURCE
      , ROW_NUMBER() OVER(PARTITION BY ERVISITID ORDER BY r.ADMITTED) AS READMISSION_RANK
      , TO_DATE(r.ADMITTED) - TO_DATE(ind.DISCHARGED) AS DAYS_TO_NEXT_VISIT
  FROM EDM.ERVISITS@EDWPROD ind
      LEFT JOIN EDM.LOOKUPDISPOSITION l ON l.DISPOSITIONID = ind.HSPENCDISPOSITIONID
      INNER JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = ind.FACILITYID
      LEFT JOIN all_admissions r ON r.PATIENTID = ind.PATIENTID AND r.ADMITTED > ind.DISCHARGED
      LEFT JOIN
        (
          SELECT
              o.*
            , ROW_NUMBER() OVER(PARTITION BY MRN, TO_DATE(o.ORCASEDATE), ORCASEID ORDER BY o.ORCASEDATE) AS RN
          FROM EDM.ORCASES o
        ) o ON o.PATIENTID = ind.PATIENTID AND TO_DATE(o.ORCASEDATE) = TO_DATE(ind.DISCHARGED) AND RN = 1
  WHERE 1=1
      AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')
      -- AND SERVICEDESC NOT IN ('Obstetrics', 'Gynecology', 'Newborn')
      AND (
        -- IND.ERDISPOSITIONID IN (-1, 0, 1, 3, 6, 8)
        -- OR (IND.ERDISPOSITIONID = 4 AND o.ORCASEID IS NULL)
        IND.HSPENCDISPOSITIONID NOT IN (5, 3, 10, 12, 16, 22, 30, 31, 32, 34, 35, 36, 38, 37, 42, 54, 70, 71, 76, 65, 80, 51, 11, 19, 45, 4, 47, 95, 96)
      )
  		--AND TO_DATE(ind.DISCHARGED) >= TO_DATE(current_date - 14)
      AND ERVISITID NOT IN (
        SELECT DISTINCT ERVISITID
      	FROM EDM.INPATIENTS ind
      	LEFT JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = ind.FACILITYID
      	WHERE 1=1
      		AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')
		      -- AND ind.DISPOSITIONID NOT IN (5, 10, 12, 16, 30, 31, 32, 34, 35, 36, 37, 42, 70, 65, 80, 51, 11, 19, 45, 4, 47)
      )

  UNION ALL

  -- AMBULATORY SURGERY
  SELECT
     DISTINCT
       ind.PATIENTID
     , ind.MRN
     , ind.AMBSURGID AS VISITID
     , ind.ADMITTED AS ADMITTEDARRIVAL
     , ind.DISCHARGED
     , ind.DISPOSITIONID
     , l.DISPOSITIONDESC
     , fac.FACILITYDESC
     , serv.SERVICEDESC
     , ns.DEPTDESC
     , prov.LASTNAME
     , 'Ambsurg' AS SOURCE
     , ROW_NUMBER() OVER(PARTITION BY AMBSURGID ORDER BY r.ADMITTED) AS READMISSION_RANK
     , TO_DATE(r.ADMITTED) - TO_DATE(ind.DISCHARGED) AS DAYS_TO_NEXT_VISIT
 FROM EDM.AMBSURG@EDWPROD ind
   LEFT JOIN EDM.LOOKUPDISPOSITION l ON l.DISPOSITIONID = ind.DISPOSITIONID
   LEFT JOIN EDM.LOOKUPFACILITY fac ON fac.FACILITYID = ind.FACILITYID
   LEFT JOIN EDM.LOOKUPSERVICE serv ON ind.SERVICEID = serv.SERVICEID
   LEFT JOIN EDM.LOOKUPPROVIDER prov ON ind.DISCHATTENDID = prov.PROVIDERID
   LEFT JOIN EDM.LOOKUPNURSINGSTATION ns ON ns.NURSINGSTATIONID = ind.DISCHNSID
   LEFT JOIN all_admissions r ON r.PATIENTID = ind.PATIENTID AND r.ADMITTED > ind.DISCHARGED
 WHERE 1=1
   AND (LOWER(fac.FACILITYDESC) LIKE '%white plains%' OR LOWER(fac.FACILITYDESC) LIKE '%wph%')
     AND IND.DISPOSITIONID NOT IN (5, 3, 10, 12, 16, 30, 31, 32, 34, 35, 36, 38, 37, 42, 70, 71, 76, 65, 80, 51, 11, 19, 45, 4, 47)

),

calls AS (
	SELECT
		  id.IDENTITY_ID AS MRN
		, p.PAT_ID
		, p.PAT_ENC_CSN_ID
		, p.CONTACT_DATE
		, dep.DEPARTMENT_NAME
		, cal.COMM_COMMENT
		, coc.NAME AS CALL_OUTCOME
		, ENTRY_TIME
		, rel.NAME AS RELATIONSHIP_TO_PATIENT
		, CASE WHEN cal.COMM_COMMENT IS NULL OR NOT REGEXP_LIKE(cal.COMM_COMMENT, '(west)|(does not meet criteria)|(ineligible)|(not eligible)', 'i') THEN 1 ELSE 0 END AS ISELIGIBLE
		, CASE WHEN fa.NATIVEENCOUNTERID IS NOT NULL THEN 1 ELSE 0 END AS ISASSESSED
		, CASE WHEN fa.NATIVEENCOUNTERID IS NOT NULL OR cal.CALL_OUTCOME_C = 1001 OR CALL_TYPE_C IN (1) THEN 1 ELSE 0 END AS ISCONTACTED
		, CASE WHEN p.PAT_ENC_CSN_ID IS NOT NULL THEN 1 ELSE 0 END AS ISATTEMPTED
	FROM PAT_ENC@CLRPROD p
	LEFT JOIN CLARITY_DEP@CLRPROD dep ON dep.DEPARTMENT_ID = p.DEPARTMENT_ID
	LEFT JOIN CAL_REFERENCE_PAT@CLRPROD clhx ON clhx.REF_PAT_CSN = p.PAT_ENC_CSN_ID
	LEFT JOIN CAL_COMM_TRACKING@CLRPROD cal ON clhx.COMM_ID = cal.COMM_ID
	LEFT JOIN ZC_CALL_OUTCOME@CLRPROD coc ON coc.CALL_OUTCOME_C = cal.CALL_OUTCOME_C
	LEFT JOIN ZC_CNCT_REL@CLRPROD rel ON rel.CNCT_REL_C = clhx.REF_PAT_REL_C
	INNER JOIN (
		SELECT PAT_ID, IDENTITY_ID
		FROM IDENTITY_ID@CLRPROD
		WHERE IDENTITY_TYPE_ID = 14
	) id ON id.PAT_ID = p.PAT_ID
	LEFT JOIN (
		SELECT DISTINCT NATIVEENCOUNTERID
		FROM EDM.FINDINGS_ALL@EDWPROD
		WHERE FINDINGTYPEID BETWEEN 400000400 AND 400000442 AND FINDINGDATETIME >= TO_DATE('2021-05-01', 'YYYY-MM-DD')
	) fa ON fa.NATIVEENCOUNTERID = p.PAT_ENC_CSN_ID
	WHERE p.DEPARTMENT_ID = '40200245'
),

calls_discharges AS (
	SELECT
		  PAT_ENC_CSN_ID
		, VISITID
		, TO_DATE(CONTACT_DATE) - TO_DATE(DISCHARGED) AS DAYS_FROM_DISCHARGE
	FROM calls
	LEFT JOIN discharges ON calls.MRN = discharges.MRN
    AND TO_DATE(CONTACT_DATE) - TO_DATE(DISCHARGED) BETWEEN 0 AND 30
    AND READMISSION_RANK = 1
    AND (DAYS_TO_NEXT_VISIT IS NULL OR DAYS_TO_NEXT_VISIT > 5)
),

calls_discharge_attr AS (
	SELECT
		    calls_discharges.PAT_ENC_CSN_ID
			, calls_discharges.VISITID
	FROM calls_discharges
	INNER JOIN (
		SELECT
		    PAT_ENC_CSN_ID
			, MIN(DAYS_FROM_DISCHARGE) AS MIN_DAYS_FROM_DISCHARGE
		FROM calls_discharges
		GROUP BY
				PAT_ENC_CSN_ID
	) mins ON mins.PAT_ENC_CSN_ID = calls_discharges.PAT_ENC_CSN_ID AND mins.MIN_DAYS_FROM_DISCHARGE = calls_discharges.DAYS_FROM_DISCHARGE
),

joined_calls_discharges AS (
	SELECT
	      discharges.PATIENTID
		, discharges.MRN
		, discharges.VISITID
		, discharges.ADMITTEDARRIVAL
		, discharges.DISCHARGED
		, discharges.DISPOSITIONID
		, discharges.DISPOSITIONDESC
		, discharges.FACILITYDESC
		, discharges.SERVICEDESC
		, discharges.DEPTDESC
		, discharges.LASTNAME
    	, discharges.SOURCE
		, MIN(calls.CONTACT_DATE) AS FIRST_CONTACT_DATE
		, MAX(calls.CONTACT_DATE) AS LAST_CONTACT_DATE
		, CASE
        	WHEN MIN(discharges.DAYS_TO_NEXT_VISIT) <= 5 THEN 0
        	WHEN MAX(weird_check.VISITID) IS NOT NULL THEN 0
        	ELSE COALESCE(MIN(calls.ISELIGIBLE), 1)
        	END AS ISELIGIBLE
		, COALESCE(SUM(calls.ISATTEMPTED), 0) AS ATTEMPTS
		, COALESCE(SUM(calls.ISCONTACTED), 0) AS CONTACTS
		, COALESCE(SUM(calls.ISASSESSED), 0) AS ASSESSMENTS
		, COALESCE(SUM(CASE WHEN calls.RELATIONSHIP_TO_PATIENT = 'Self' THEN calls.ISCONTACTED ELSE 0 END), 0) AS CONTACTS_SELF
		, COALESCE(SUM(CASE WHEN calls.RELATIONSHIP_TO_PATIENT <> 'Self' THEN calls.ISCONTACTED ELSE 0 END), 0) AS CONTACTS_OTHER
	FROM discharges
	LEFT JOIN (
		SELECT
			  calls.CONTACT_DATE
			, calls.ISELIGIBLE
			, calls.ISATTEMPTED
			, calls.ISCONTACTED
			, calls.ISASSESSED
			, calls_discharge_attr.VISITID
			, calls.RELATIONSHIP_TO_PATIENT
		FROM calls_discharge_attr
		INNER JOIN calls ON calls.PAT_ENC_CSN_ID = calls_discharge_attr.PAT_ENC_CSN_ID
	) calls ON calls.VISITID = discharges.VISITID
  -- Check if this visit's discharge occured during another visit's stay
  LEFT JOIN discharges weird_check
    ON discharges.MRN = weird_check.MRN
    AND discharges.DISCHARGED BETWEEN weird_check.ADMITTEDARRIVAL AND weird_check.DISCHARGED
    AND discharges.VISITID <> weird_check.VISITID
	GROUP BY
		    discharges.PATIENTID
  		, discharges.MRN
  		, discharges.VISITID
  		, discharges.ADMITTEDARRIVAL
  		, discharges.DISCHARGED
  		, discharges.DISPOSITIONID
  		, discharges.DISPOSITIONDESC
  		, discharges.FACILITYDESC
  		, discharges.SERVICEDESC
  		, discharges.DEPTDESC
  		, discharges.LASTNAME
      , discharges.SOURCE
),

finally AS (
	SELECT
		  jcd.*
		, c.CALL_OUTCOME
	FROM joined_calls_discharges jcd
	LEFT JOIN (
		SELECT
			  calls.*
			, calls_discharge_attr.VISITID
			, ROW_NUMBER() OVER(PARTITION BY calls_discharge_attr.VISITID ORDER BY ENTRY_TIME DESC) AS CONTACT_RANK
		FROM calls
		INNER JOIN calls_discharge_attr ON calls_discharge_attr.PAT_ENC_CSN_ID = calls.PAT_ENC_CSN_ID
		WHERE CALL_OUTCOME IS NOT NULL
	) c ON c.VISITID = jcd.VISITID AND CONTACT_RANK = 1-- AND calls.CONTACT_DATE >= TO_DATE(jcd.DISCHARGED) AND jcd.ATTEMPTS > 0 AND jcd.CONTACTS = 0
	WHERE DISCHARGED IS NOT NULL
)

SELECT
    finally.*
  , pat.DOB
  , pat.SEX
  , TRUNC(MONTHS_BETWEEN(SYSDATE, pat.DOB) / 12) AS CURRENT_AGE
  , TRUNC(MONTHS_BETWEEN(finally.DISCHARGED, pat.DOB) / 12) AS DISCHARGE_AGE
  , pl.PREFERREDLANGUAGEDESC 
FROM finally
LEFT JOIN EDM.PATIENTS@EDWPROD pat ON pat.PATIENTID = finally.PATIENTID
LEFT JOIN EDM.LOOKUPPREFERREDLANGUAGE@EDWPROD pl ON pl.PREFERREDLANGUAGEID = pat.PREFERREDLANGUAGEID
